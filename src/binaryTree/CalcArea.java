package binaryTree;

import java.util.Scanner;


public class CalcArea
{
	/*
	 * ???????????????¦Ëi?????(0.0)?? ??????????????????????????????:
1 )?????????????????????????????????????????E,
2 )?????????????????????????????????????????????????1???????;???????X offsetY????????????X?????????????, offsetY???????????????,????????????????
???????????????E.???????????????þŸ???????????????????????X-E??????????¦Å??????
???????:
?????????????NE???????N????þŸ???????§Ö??????K???E.
??????N?§³???????????????-?????????x osorr???????????????X?????????????????????????????????‰^????¦¶:0<N<= 10000, 0<X<= E<=20000, -10000<=offsetY<=10000.
???????:
????????????????????????????????.?????¦¶??0-4294967295??
???1:
????
4 10
1 1
2 1
3 1
4 -2
???
12
????????????????????????????????
??????????????CSDN??????????????????????¡ê????CC 4.0 BY-SA???§¿?ï…??????????????????????????
????????https://blog.csdn.net/csfun1/article/details/124509176
	 */
	public static void main(String[] args)
	{
		Scanner scanner = new Scanner(System.in);
		String[] line = scanner.nextLine().split(" ");
		int numCmds = Integer.parseInt(line[0]);
		int maxX = Integer.parseInt(line[1]);
		long area = 0;
		int originX = 0;
		int originY = 0;
		int deltaX = 0;
		boolean flag = false;
		for (int i = 0; i < numCmds; i++)
		{
			
			String[] cmdStrings = scanner.nextLine().split(" ");
			int xNew = Integer.parseInt(cmdStrings[0]);
			if (xNew <= maxX)
			{
				deltaX = xNew -originX;
			} else {
				deltaX = maxX - originX;
				flag = true;
			}
			area += (xNew - originX) * Math.abs(originY + Integer.parseInt(cmdStrings[1]));
			originY += Integer.parseInt(cmdStrings[1]);
			originX = xNew;
			if (flag)
			{
				break;
			}
		}
		area += (maxX - originX) * originY;
		System.out.println(area);
	}
	
}
